services:
  db:
    build:
      context: ./Database
    container_name: l05-db-1
    environment:
      - POSTGRES_USER=apiUser
      - POSTGRES_PASSWORD=1_L0VE_D@1
      - POSTGRES_DB=countryDB

  api:
    build:
      context: ./HttpAPI
    expose:
      - "3141"  
    deploy:
      replicas: 2
    labels:
      - traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)
      - traefik.http.services.api.loadbalancer.sticky.cookie=true
      - traefik.http.services.api.loadbalancer.sticky.cookie.name=RouteID
      - traefik.http.routers.api.entrypoints=http,https
      - traefik.http.routers.api.tls=true
    
   
   
  webserver:
    build:
      context: ./StaticWebServer
    expose:
      - "80"  
    deploy:
      replicas: 2
    labels:
      - traefik.http.routers.webserver.rule=Host(`localhost`)
      - traefik.http.routers.webserver.entrypoints=http,https
      - traefik.http.routers.webserver.tls=true
    
    

  traefik:
    image: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --log.level=DEBUG
      - --accesslog=true
      - --log.filePath=/logs/traefik.log
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #Docker socket
      - ./logs/:/logs/
      - ./certificates:/etc/traefik/certificates
      - ./traefik.yaml:/etc/traefik/traefik.yaml
    ports:
      - "80:80"
      - "443:443"
      - "3141:3141"
      - "8080:8080"